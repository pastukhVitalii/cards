{"version":3,"sources":["n2-features/f3-cards/с1-packs/p1-ui/Packs.module.css","n1-main/m1-ui/header/Header.module.css","n1-main/m3-dal/authAPI.ts","n1-main/m2-bll/loginReducer.ts","n1-main/m3-dal/registerApi.ts","n1-main/m2-bll/registrationReducer.ts","n1-main/m2-bll/restorePassReducer.ts","n1-main/m2-bll/profileReducer.ts","n1-main/m2-bll/newPassReducer.ts","n2-features/f3-cards/с1-packs/p2-bll/packsReducer.ts","n1-main/m2-bll/store.ts","n2-features/f1-auth/a5-profile/Profile.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/routes/routes.ts","n1-main/m1-ui/common/input/Input.tsx","n1-main/m1-ui/common/button/Button.tsx","n2-features/f1-auth/a1-login/Login.tsx","n2-features/f1-auth/a3-restore/Restore.tsx","n2-features/f1-auth/a2-register/r1-ui/RegisterV.tsx","n2-features/f1-auth/a4-newPass/NewPass.tsx","n2-features/f3-cards/с1-packs/p1-ui/Packs.tsx","n1-main/m1-ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","axiosInstance","axios","create","baseURL","authAPI","email","password","rememberMe","post","then","r","data","LOGIN_SUCCESS","LOGIN_ERROR","initialState","errorMessage","isAuth","isDisabled","isFetching","signIn","dispatch","res","type","catch","e","instance","registerApi","signUp","a","response","success","error","actions","registrationSuccess","registrationError","packs","name","grade","pack","rootReducer","combineReducers","login","state","action","registration","restorePass","profile","newPass","store","createStore","applyMiddleware","thunk","Profile","props","Header","className","css","logo","src","alt","to","loginBlock","onClick","logout","Input","placeholder","value","onChange","autoFocus","Button","small","loading","spiner","Login","useSelector","useState","setEmail","pass","setPass","setRememberMe","setEmailCallBack","useCallback","currentTarget","setPasswordCallBack","setRememberMeCallBack","checked","useDispatch","signInCallback","href","disable","Restore","RegisterV","React","memo","console","log","setEmailCallback","setPasswordCallback","signUpCallback","getState","alert","inputEmailStyle","inputPassStyle","NewPass","Packs","delPacksOnClick","packsArr","map","p","column","columnOpt","mainContent","table","App","path","component","render","exact","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister","message"],"mappings":"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","file":"static/js/main.56adb7f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Packs_mainContent__VvYwV\",\"table\":\"Packs_table__29KSz\",\"tableHeader\":\"Packs_tableHeader__2HR8s\",\"column\":\"Packs_column__2RuEQ\",\"columnOpt\":\"Packs_columnOpt__368Xd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__3doNV\",\"loginBlock\":\"Header_loginBlock__2ZNMB\"};","import axios from \"axios\"\r\n\r\ntype CommonApiType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype ResponseLoginType = {\r\n    email: string\r\n    name: string\r\n    isAdmin: boolean\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n    success: boolean\r\n\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: \"http://localhost:7542/1.0\"\r\n})\r\n\r\nexport const authAPI = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return axiosInstance.post<ResponseLoginType>(\"/auth/login/\", {\r\n            email,\r\n            password,\r\n            rememberMe})\r\n            .then(r=> r.data)\r\n    }\r\n}","import {authAPI} from \"../m3-dal/authAPI\";\r\nimport {AppStateType} from \"./store\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\n\r\nconst LOGIN_SUCCESS = \"CARDS/LOGINREDUCER/LOGIN_SUCCESS\"\r\nconst LOGIN_ERROR = \"CARDS/LOGINREDUCER/LOGIN_ERROR\"\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const initialState = {\r\n    errorMessage: \"\",\r\n    isAuth: false,\r\n    isDisabled: false,\r\n    isFetching: false\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case LOGIN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isAuth: true,\r\n                isDisabled: true,\r\n                isFetching: true\r\n            }\r\n        }\r\n        case LOGIN_ERROR: {\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth,\r\n                errorMessage: action.errorMessage,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst loginSuccsess = () => {\r\n    return {\r\n        type: LOGIN_SUCCESS,\r\n    }\r\n}\r\nconst showError = () => {\r\n    return {\r\n        type: LOGIN_ERROR,\r\n        errorMessage: \"smth wrong\"\r\n    }\r\n}\r\nconst disableBtn = (isDisabled: boolean) => {\r\n\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, any>;\r\n\r\ntype DispatchType = ThunkDispatch<AppStateType, unknown, any>;\r\n\r\n//thunk\r\nexport const signIn = (email: string, password: string, rememberMe: boolean): ThunkType => (dispatch: DispatchType) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(res => {\r\n            dispatch(loginSuccsess())\r\n        }).catch((e) => {\r\n        // if()\r\n        dispatch(showError())\r\n    })\r\n}","import axios from \"axios\";\r\n\r\nexport type SignUpDataType = {\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/1.0'\r\n})\r\n\r\nexport const registerApi = {\r\n    /*signUp(email: string, password: string) {\r\n        debugger\r\n        return instance.post<RegistrationType>('/auth/register', {email, password})\r\n            .then(response => {\r\n                    debugger\r\n                    response.data\r\n                }\r\n            )\r\n    }*/\r\n\r\n    signUp: async (email: string, password: string) => {\r\n        const response = await instance.post<SignUpDataType>('/auth/register', {email, password});\r\n        return response.data;\r\n    }\r\n}\r\n\r\n","import {registerApi} from \"../m3-dal/registerApi\";\r\nimport {Dispatch} from \"redux\";\r\nimport {InferActionTypes} from \"./store\";\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst initialState = {\r\n    success: false,\r\n    error: ''\r\n}\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'CARDS_REDUCER/REGISTER_SUCCESS': {\r\n            return {\r\n                ...state, success: action.success,\r\n            }\r\n        }\r\n        case 'CARDS_REDUCER/REGISTER_ERROR': {\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n// Thunk\r\n\r\nexport const signUp = (email: string, password: string) => async (dispatch: Dispatch<ActionType>, getState: any) => {\r\n    try {\r\n        const res = await registerApi.signUp(email, password);\r\n        dispatch(actions.registrationSuccess(true));\r\n        alert('you are registered')\r\n    } catch (e) {\r\n        dispatch(actions.registrationError(e.response.data.error));\r\n        alert(e.response.data.error)\r\n    }\r\n}\r\n\r\n// Action\r\n\r\ntype ActionType = InferActionTypes<typeof actions>\r\n\r\nconst actions = {\r\n    registrationSuccess: (success: boolean) => ({\r\n        type: 'CARDS_REDUCER/REGISTER_SUCCESS',\r\n        success\r\n    } as const),\r\n    registrationError: (error: string) => ({\r\n        type: 'CARDS_REDUCER/REGISTER_ERROR',\r\n        error\r\n    } as const)\r\n}\r\n","type InitialStateType = typeof initialState;\r\n\r\nconst initialState = {}\r\n\r\nexport const restorePassReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    return state\r\n}","type InitialStateType = typeof initialState;\r\n\r\nconst initialState = {}\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    return state\r\n}","type InitialStateType = typeof initialState;\r\n\r\nconst initialState = {}\r\n\r\nexport const newPassReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    return state\r\n}","import {Dispatch} from \"redux\";\r\nimport {InferActionTypes} from \"../../../../n1-main/m2-bll/store\";\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst initialState = {\r\n    packs: [\r\n       /* {\r\n            name: 'Name packs',\r\n            grade: 'Grade',\r\n            pack: {}\r\n        },*/\r\n        {\r\n            name: 'first pack',\r\n            grade: '10',\r\n            pack: {}\r\n        },\r\n        {\r\n            name: 'second pack',\r\n            grade: '7',\r\n            pack: {}\r\n        }\r\n    ]\r\n}\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\r\n    return state\r\n    /*switch (action.type) {\r\n        case 'CARDS_REDUCER/REGISTER_SUCCESS': {\r\n            return {\r\n                ...state, success: action.success,\r\n            }\r\n        }\r\n        case 'CARDS_REDUCER/REGISTER_ERROR': {\r\n            return {\r\n                ...state, error: action.error\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }*/\r\n}\r\n// Thunk\r\n\r\nexport const signUp = (email: string, password: string) => async (dispatch: Dispatch<ActionType>, getState: any) => {\r\n\r\n    // dispatch((actions.setPacks()))\r\n    /*try {\r\n        const res = await registerApi.signUp(email, password);\r\n        dispatch(actions.registrationSuccess(true));\r\n        alert('you are registered')\r\n    } catch (e) {\r\n        dispatch(actions.registrationError(e.response.data.error));\r\n        alert(e.response.data.error)\r\n    }*/\r\n}\r\n\r\n// Action\r\n\r\ntype ActionType = InferActionTypes<typeof actions>\r\n\r\nconst actions = {\r\n    setPacks: () => ({\r\n        type: 'PACKS_REDUCER/SET_PACKS'\r\n    } as const)\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"./loginReducer\";\r\nimport {registrationReducer} from \"./registrationReducer\";\r\nimport {restorePassReducer} from \"./restorePassReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {newPassReducer} from \"./newPassReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {packsReducer} from \"../../n2-features/f3-cards/с1-packs/p2-bll/packsReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    restorePass: restorePassReducer,\r\n    profile: profileReducer,\r\n    newPass: newPassReducer,\r\n    packs: packsReducer\r\n})\r\n\r\nexport type InferActionTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","import React from \"react\";\r\n\r\nconst Profile = (props: any) => {\r\n    return (\r\n        <>\r\n            <div >\r\n                Vitaliy\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport css from './Header.module.css';\r\nimport {login, newPass, packs, profile, registration, restore} from \"../routes/routes\";\r\n\r\nconst Header = (props: any) => {\r\n    return (\r\n        <header>\r\n            <div>\r\n                <img className={css.logo}\r\n                     src=\"https://pics.clipartpng.com/midle/Deck_of_Cards_PNG_Clip_Art_Image-2722.png\" alt=\"cards\"/>\r\n            </div>\r\n            <NavLink to={profile}> Profile </NavLink>\r\n            <NavLink to={login}> Sign in </NavLink>\r\n            <NavLink to={registration}> Sign up </NavLink>\r\n            <NavLink to={restore}> Restore password </NavLink>\r\n            <NavLink to={newPass}> New password </NavLink>\r\n            <NavLink to={packs}> Packs </NavLink>\r\n            <NavLink to={'/'}> Error 404 </NavLink>\r\n            <div className={css.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","export const login = '/login';\r\nexport const registration = '/registration';\r\nexport const restore = '/restorePass';\r\nexport const profile = '/profile';\r\nexport const newPass = '/newPass';\r\nexport const packs = '/cards/pack';","import React from 'react';\r\nimport './Input.css';\r\n\r\ntype OwnPropTypes = {\r\n    value: string\r\n    type: string\r\n    placeholder: string\r\n    onChange: (e: any) => void\r\n}\r\n\r\nconst Input = (props: OwnPropTypes) => {\r\n    // let errorClass = this.props.state.error ? 'error' : '';\r\n    return (\r\n      <div className='input'>\r\n        <input type=\"text\" placeholder= {props.placeholder}\r\n               className={props.type}\r\n               value={props.value}\r\n               onChange={props.onChange}\r\n               autoFocus={true}/>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\ntype OwnPropTypes = {\r\n    name: string\r\n    type: string\r\n    disable: boolean\r\n    spiner?: boolean\r\n    small?: boolean\r\n    onClick: () => void\r\n}\r\nconst Button = (props: OwnPropTypes) => {\r\n    let small = props.small? 'small': '';\r\n  let loading = props.spiner === true ? <img\r\n    src=\"https://media0.giphy.com/media/131tNuGktpXGhy/200w.webp?cid=ecf05e474d05d306344ab3d36c11ca3dd5479c7af938e93e&rid=200w.webp\"\r\n    alt=\"\"/> : '';\r\n  return (\r\n    <button className={`button + ${props.type} + ${small}`} onClick={props.onClick}>\r\n      {loading}\r\n      {props.name}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button;\r\n","import React, {useCallback, useState} from \"react\";\r\nimport Input from \"../../../n1-main/m1-ui/common/input/Input\";\r\nimport Button from \"../../../n1-main/m1-ui/common/button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {signIn} from \"../../../n1-main/m2-bll/loginReducer\";\r\nimport {AppStateType} from \"../../../n1-main/m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Preloader from \"../../../n1-main/m1-ui/common/Preloader\";\r\n\r\nconst Login = (props: any) => {\r\n\r\n    const {isFetching, errorMessage, isAuth, isDisabled} = useSelector((state: AppStateType) => state.login)\r\n\r\n    const [email, setEmail] = useState('pastuh3@gmail.com');\r\n    const [pass, setPass] = useState('!Asd1234');\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n\r\n    const setEmailCallBack = useCallback((e) => {\r\n        setEmail(e.currentTarget.value)\r\n    }, [setEmail]);\r\n\r\n    const setPasswordCallBack = useCallback((e) => {\r\n        setPass(e.currentTarget.value)\r\n    }, [setPass]);\r\n\r\n    const setRememberMeCallBack = useCallback((e) => {\r\n        setRememberMe(e.currentTarget.checked)\r\n    }, [setRememberMe]);\r\n\r\n    const dispatch = useDispatch();\r\n    const signInCallback = useCallback(\r\n        () => dispatch(signIn(email, pass, rememberMe)),\r\n        [email, pass, rememberMe, dispatch]\r\n    );\r\n\r\n    /*if (isAuth) {\r\n        return <Redirect to='/profile'/>\r\n    }*/\r\n\r\n    /*if(isFetching) {\r\n        return {Preloader}\r\n    }*/\r\n\r\n    let btnStyle = '' || 'primary';\r\n    let inputStyle = '' || 'error';\r\n    return (\r\n\r\n        <>\r\n            <div>\r\n                <div>\r\n                    <Input type={inputStyle} placeholder={'e-mail'} value={email} onChange={setEmailCallBack}/>\r\n                </div>\r\n                <div>\r\n                    <Input type={inputStyle} placeholder={'password'} value={pass} onChange={setPasswordCallBack}/>\r\n                </div>\r\n                <div>\r\n                    <label>\r\n                        <input type={'checkbox'} checked={rememberMe} onClick={setRememberMeCallBack}/> Remember me\r\n                    </label>\r\n                </div>\r\n                <div><a href=\"\">Forgot?</a></div>\r\n                <Button type={btnStyle} name={'Login'} onClick={signInCallback}\r\n                        spiner={isFetching} disable={isDisabled}/> {/*primary danger loading*/}\r\n\r\n            </div>\r\n            {/*{isFetching? <Preloader/>: <div>\r\n                <div>\r\n                    <Input type={inputStyle} placeholder={'e-mail'} value={email} onChange={setEmailCallBack}/>\r\n                </div>\r\n                <div>\r\n                    <Input type={inputStyle} placeholder={'password'} value={pass} onChange={setPasswordCallBack}/>\r\n                </div>\r\n                <div>\r\n                    <label>\r\n                        <input type={'checkbox'} checked={rememberMe} onClick={setRememberMeCallBack}/> Remember me\r\n                    </label>\r\n                </div>\r\n                <div><a href=\"\">Forgot?</a></div>\r\n                <Button type={btnStyle} name={'Login'} onClick={signInCallback}\r\n                        spiner={isFetching} disable={isDisabled}/> primary danger loading\r\n\r\n            </div>}*/}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nconst Restore = (props: any) => {\r\n    return (\r\n        <>\r\n            <div >\r\n                Restore password\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Restore;","import React, {useCallback, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Input from \"../../../../n1-main/m1-ui/common/input/Input\";\r\nimport Button from \"../../../../n1-main/m1-ui/common/button/Button\";\r\nimport {signUp} from \"../../../../n1-main/m2-bll/registrationReducer\";\r\nimport {AppStateType} from \"../../../../n1-main/m2-bll/store\";\r\nimport {login} from \"../../../../n1-main/m1-ui/routes/routes\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\ntype OwnPropsType = {\r\n    email: string;\r\n    pass: string;\r\n    setEmail: () => void;\r\n    setPass: () => void;\r\n}\r\n\r\nconst RegisterV = React.memo((props: OwnPropsType)=> {\r\n\r\n    console.log('register render');\r\n\r\n    const [email, setEmail] = useState('pastuh3@gmail.com');\r\n    const [pass, setPass] = useState('!Asd1234');\r\n\r\n    const setEmailCallback = useCallback((e) => {\r\n        setEmail(e.currentTarget.value)\r\n    }, [setEmail]);\r\n\r\n    const setPasswordCallback = useCallback((e) => {\r\n        setPass(e.currentTarget.value)\r\n    }, [setPass]);\r\n\r\n    const dispatch = useDispatch();\r\n    const signUpCallback = useCallback(\r\n        () => dispatch(signUp(email, pass)),\r\n        [email, pass, dispatch]\r\n    );\r\n\r\n    const error = useSelector((state: AppStateType) => state.registration.error);\r\n    const success = useSelector((state: AppStateType) => state.registration.success);\r\n    if(success) {\r\n        return <Redirect to={login}/>\r\n    }\r\n\r\n    let inputEmailStyle = error || '';\r\n    let inputPassStyle = error || '';\r\n    let btnStyle = '' || 'primary';\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                Sigin up\r\n                {error? <div>{error}</div>: ''}\r\n                <Input type={inputEmailStyle} placeholder={'e-mail'} value={email} onChange={setEmailCallback} />\r\n                <Input type={inputPassStyle} placeholder={'password'} value={pass} onChange={setPasswordCallback} />\r\n                <Button type={btnStyle} name={'Login'} spiner={false} disable={false} onClick={signUpCallback} />\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default RegisterV;","import React from \"react\";\r\n\r\nconst NewPass = (props: any) => {\r\n    return (\r\n        <>\r\n            <div >\r\n                New password\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NewPass;","import React from \"react\";\r\nimport css from './Packs.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../n1-main/m2-bll/store\";\r\nimport Button from \"../../../../n1-main/m1-ui/common/button/Button\";\r\nimport {packs} from \"../../../../n1-main/m1-ui/routes/routes\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype OwnPropsType = {\r\n    email: string;\r\n    pass: string;\r\n\r\n}\r\n\r\nconst Packs = React.memo((props: OwnPropsType) => {\r\n\r\n    console.log('packs render');\r\n\r\n    const {packs} = useSelector((store: AppStateType) => store.packs);\r\n\r\n    let delPacksOnClick = () => {\r\n        alert('delete')\r\n    }\r\n\r\n    let btnStyle = '' || 'primary';\r\n\r\n    let packsArr = packs.map(p => {\r\n        return <tr>\r\n            <td className={css.column}>{p.name}</td>\r\n            <td className={css.column}>{p.grade}</td>\r\n            <td className={css.columnOpt}>\r\n                <Button name={'delete'} type={btnStyle} small={true} disable={true} onClick={delPacksOnClick}/>\r\n                <Button name={'update'} type={btnStyle} small={true} disable={true} onClick={delPacksOnClick}/>\r\n                <NavLink to='/'> Cards </NavLink>\r\n                <NavLink to='/'> Learn </NavLink>\r\n            </td>\r\n        </tr>\r\n    })\r\n    return (\r\n        <>\r\n            <div className={css.mainContent}>\r\n                <div>Packs page</div>\r\n                <table className={css.table}>\r\n                    <tr>\r\n                        <td className={css.column}>Packs</td>\r\n                        <td className={css.column}>Grade</td>\r\n                        <td className={css.columnOpt}>Option</td>\r\n                    </tr>\r\n                    {packsArr}\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Packs;","import React from 'react';\r\nimport './App.css';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from \"../m2-bll/store\";\r\nimport {login, newPass, packs, profile, registration, restore} from \"./routes/routes\";\r\nimport Profile from \"../../n2-features/f1-auth/a5-profile/Profile\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport Header from \"./header/Header\";\r\nimport Login from \"../../n2-features/f1-auth/a1-login/Login\";\r\nimport Restore from \"../../n2-features/f1-auth/a3-restore/Restore\";\r\nimport RegisterV from \"../../n2-features/f1-auth/a2-register/r1-ui/RegisterV\";\r\nimport NewPass from \"../../n2-features/f1-auth/a4-newPass/NewPass\";\r\nimport Packs from \"../../n2-features/f3-cards/с1-packs/p1-ui/Packs\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <div className=\"App\">\r\n                    <Header/>\r\n                    <div className='main'>\r\n                        <Route path={profile} component={Profile}/>\r\n                        <Route path={login} component={Login}/>\r\n                        <Route path={registration} component={RegisterV}/>\r\n                        <Route path={restore} component={Restore}/>\r\n                        <Route path={newPass} component={NewPass}/>\r\n                        <Route path={packs} component={Packs}/>\r\n                        <Route path='/' render={() => <div>Error 404</div> } exact={true}/>\r\n                    </div>\r\n                </div>\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}